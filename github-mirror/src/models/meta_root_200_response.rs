/*
 * GitHub v3 REST API
 *
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MetaRoot200Response {
    #[serde(rename = "current_user_url")]
    pub current_user_url: String,
    #[serde(rename = "current_user_authorizations_html_url")]
    pub current_user_authorizations_html_url: String,
    #[serde(rename = "authorizations_url")]
    pub authorizations_url: String,
    #[serde(rename = "code_search_url")]
    pub code_search_url: String,
    #[serde(rename = "commit_search_url")]
    pub commit_search_url: String,
    #[serde(rename = "emails_url")]
    pub emails_url: String,
    #[serde(rename = "emojis_url")]
    pub emojis_url: String,
    #[serde(rename = "events_url")]
    pub events_url: String,
    #[serde(rename = "feeds_url")]
    pub feeds_url: String,
    #[serde(rename = "followers_url")]
    pub followers_url: String,
    #[serde(rename = "following_url")]
    pub following_url: String,
    #[serde(rename = "gists_url")]
    pub gists_url: String,
    #[serde(rename = "hub_url", skip_serializing_if = "Option::is_none")]
    pub hub_url: Option<String>,
    #[serde(rename = "issue_search_url")]
    pub issue_search_url: String,
    #[serde(rename = "issues_url")]
    pub issues_url: String,
    #[serde(rename = "keys_url")]
    pub keys_url: String,
    #[serde(rename = "label_search_url")]
    pub label_search_url: String,
    #[serde(rename = "notifications_url")]
    pub notifications_url: String,
    #[serde(rename = "organization_url")]
    pub organization_url: String,
    #[serde(rename = "organization_repositories_url")]
    pub organization_repositories_url: String,
    #[serde(rename = "organization_teams_url")]
    pub organization_teams_url: String,
    #[serde(rename = "public_gists_url")]
    pub public_gists_url: String,
    #[serde(rename = "rate_limit_url")]
    pub rate_limit_url: String,
    #[serde(rename = "repository_url")]
    pub repository_url: String,
    #[serde(rename = "repository_search_url")]
    pub repository_search_url: String,
    #[serde(rename = "current_user_repositories_url")]
    pub current_user_repositories_url: String,
    #[serde(rename = "starred_url")]
    pub starred_url: String,
    #[serde(rename = "starred_gists_url")]
    pub starred_gists_url: String,
    #[serde(rename = "topic_search_url", skip_serializing_if = "Option::is_none")]
    pub topic_search_url: Option<String>,
    #[serde(rename = "user_url")]
    pub user_url: String,
    #[serde(rename = "user_organizations_url")]
    pub user_organizations_url: String,
    #[serde(rename = "user_repositories_url")]
    pub user_repositories_url: String,
    #[serde(rename = "user_search_url")]
    pub user_search_url: String,
}

impl MetaRoot200Response {
    pub fn new(current_user_url: String, current_user_authorizations_html_url: String, authorizations_url: String, code_search_url: String, commit_search_url: String, emails_url: String, emojis_url: String, events_url: String, feeds_url: String, followers_url: String, following_url: String, gists_url: String, issue_search_url: String, issues_url: String, keys_url: String, label_search_url: String, notifications_url: String, organization_url: String, organization_repositories_url: String, organization_teams_url: String, public_gists_url: String, rate_limit_url: String, repository_url: String, repository_search_url: String, current_user_repositories_url: String, starred_url: String, starred_gists_url: String, user_url: String, user_organizations_url: String, user_repositories_url: String, user_search_url: String) -> MetaRoot200Response {
        MetaRoot200Response {
            current_user_url,
            current_user_authorizations_html_url,
            authorizations_url,
            code_search_url,
            commit_search_url,
            emails_url,
            emojis_url,
            events_url,
            feeds_url,
            followers_url,
            following_url,
            gists_url,
            hub_url: None,
            issue_search_url,
            issues_url,
            keys_url,
            label_search_url,
            notifications_url,
            organization_url,
            organization_repositories_url,
            organization_teams_url,
            public_gists_url,
            rate_limit_url,
            repository_url,
            repository_search_url,
            current_user_repositories_url,
            starred_url,
            starred_gists_url,
            topic_search_url: None,
            user_url,
            user_organizations_url,
            user_repositories_url,
            user_search_url,
        }
    }
}

